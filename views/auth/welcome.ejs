<!DOCTYPE html>
<html>
<head>
    <title>Welcome - JyotsnaNCBI</title>
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="stylesheet" href="/styles/auth.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js"></script>
    <style>
        body {
            background: linear-gradient(135deg, #2c3e50, #4ca1af);
            min-height: 100vh;
            margin: 0;
            padding: 0;
        }
        
        .welcome-container {
            max-width: 800px;
            margin: 50px auto;
            padding: 2rem;
        }

        .profile-section{
            background: linear-gradient(135deg, #91bbff, #5672ff);
            color: #2c3e50;
        }
        
        .user-email{
            color: #2c3e50;
        }
        
        .ncbi-credentials {
            margin-top: 2rem;
            padding: 1.5rem;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            text-align: left;
        }
        
        .form-group {
            margin-bottom: 1rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #2c3e50;
        }
        
        .form-group input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: 'Poppins', sans-serif;
        }
        
        .save-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s;
        }
        
        .save-btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        
        .status-message {
            margin-top: 1rem;
            padding: 0.75rem;
            border-radius: 4px;
            display: none;
        }
        
        .status-success {
            background-color: rgba(40, 167, 69, 0.2);
            color: #28a745;
        }
        
        .status-error {
            background-color: rgba(220, 53, 69, 0.2);
            color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="welcome-container">
        <div class="profile-section">
            <% if (user && user.photo) { %>
                <img src="<%= user.photo %>" alt="Profile" class="welcome-profile-pic">
            <% } %>
            <h3>Welcome, <%= user && (user.name || user.username) || user.email %>!</h3>
            <p class="user-email">Email: <%= user.email %></p>
            
            <div class="ncbi-credentials">
                <h4>NCBI API Credentials</h4>
                <p>Enter your NCBI email and API key to enhance your experience</p>
                
                <form id="ncbiCredentialsForm">
                    <h3>Your NCBI API Credentials</h3>
                    <div class="form-group">
                        <label for="ncbiEmail">NCBI Email</label>
                        <input type="email" id="ncbiEmail" name="ncbiEmail" value="<%= user.ncbiCredentials ? user.ncbiCredentials.email : '' %>" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="ncbiApiKey">NCBI API Key</label>
                        <input type="text" id="ncbiApiKey" name="ncbiApiKey" value="<%= user.ncbiCredentials ? user.ncbiCredentials.apiKey : '' %>" class="form-control" required>
                    </div>
                    <button type="submit" class="save-btn">Save Credentials</button>
                </form>
                
                <div id="statusMessage" class="status-message"></div>
            </div>
            
            <div class="action-buttons">
                <a href="/" class="btn btn-primary">Go to Tools</a>
                <a href="/auth/logout" class="btn btn-danger">Logout</a>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                // Initialize Firebase
                const response = await fetch('/api/firebase-config');
                const firebaseConfig = await response.json();
                
                if (!firebase.apps.length) {
                    firebase.initializeApp(firebaseConfig);
                }
                
                const db = firebase.firestore();
                const rtdb = firebase.database();
                const userId = '<%= user.uid %>';
                
                // Set up form submission
                const form = document.getElementById('ncbiCredentialsForm');
                const statusMessage = document.getElementById('statusMessage');
                
                form.addEventListener('submit', async function(e) {
                    e.preventDefault();
                    
                    const email = document.getElementById('ncbiEmail').value;
                    const apiKey = document.getElementById('ncbiApiKey').value;
                    
                    try {
                        // Save to both Firestore and Realtime Database
                        const userRef = db.collection('users').doc(userId);
                        const rtdbRef = rtdb.ref('users/' + userId + '/ncbiCredentials');
                        
                        await Promise.all([
                            userRef.set({
                                ncbiCredentials: { email, apiKey },
                                updatedAt: firebase.firestore.FieldValue.serverTimestamp()
                            }, { merge: true }),
                            rtdbRef.set({ email, apiKey })
                        ]);
                        
                        // Send to server to update session
                        const response = await fetch('/auth/save-ncbi-credentials', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ email, apiKey }),
                            credentials: 'include'
                        });
                        
                        const data = await response.json();
                        
                        if (data.success) {
                            statusMessage.textContent = 'Credentials saved successfully!';
                            statusMessage.className = 'status-message status-success';
                        } else {
                            throw new Error(data.error || 'Failed to save credentials');
                        }
                    } catch (error) {
                        console.error('Error saving credentials:', error);
                        statusMessage.textContent = 'Error saving credentials: ' + error.message;
                        statusMessage.className = 'status-message status-error';
                    }
                    
                    statusMessage.style.display = 'block';
                });
                
                // Load existing credentials from Realtime Database
                const rtdbRef = rtdb.ref('users/' + userId + '/ncbiCredentials');
                rtdbRef.on('value', (snapshot) => {
                    const data = snapshot.val();
                    if (data) {
                        document.getElementById('ncbiEmail').value = data.email || '';
                        document.getElementById('ncbiApiKey').value = data.apiKey || '';
                    }
                });
                
            } catch (error) {
                console.error('Error initializing Firebase:', error);
                statusMessage.textContent = 'Error initializing application: ' + error.message;
                statusMessage.className = 'status-message status-error';
                statusMessage.style.display = 'block';
            }
        });
    </script>

    <style>
        .welcome-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 2rem;
            text-align: center;
        }

        .profile-section {
            background: white;
            padding: 2rem;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .welcome-profile-pic {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            margin-bottom: 1rem;
            object-fit: cover;
            border: 4px solid #fff;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .action-buttons {
            margin-top: 2rem;
            display: flex;
            gap: 1rem;
            justify-content: center;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
        }

        .btn-primary {
            background: #007bff;
            color: white;
        }

        .btn-danger {
            background: #dc3545;
            color: white;
        }

        .btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
    </style>
</body>
</html>